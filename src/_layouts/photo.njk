{% extends "./base.njk" %}

{% if origin %}
  {% set dimensions = origin.data.dimensions %}
  {% set gear = origin.data.gear %}
  {% set settings = origin.data.settings %}
  {% set geo = origin.data.geo %}
  {% set content = content or origin.content %}
  {% set tags = origin.data.tags %}
  {% set colors = origin.data.colors %}
  {% set dates = origin.data.dates %}
{% endif %}

{% block description %}
  <meta name="description" property="og:description" content="{{ content | markdownify | excerpt | striptags | safe }}" />
{% endblock %}

{% block styles %}
  style="--ambiant-background: #{{ colors.darkMuted | bgcolor }}"
{% endblock %}

{% block opengraphimage %}
{# {% set photoUrl = site.url + '/photos/' + page.fileSlug + '/' + page.fileSlug + '.jpg' %} #}
{% set photoUrl = 'https://nicolas-hoizey.photo' + '/photos/' + page.fileSlug + '/' + page.fileSlug + '.jpg' %}
{% if dimensions.width < dimensions.height %}
  {% set position = 'x_128' %}
{% else %}
  {% set position = 'x_48' %}
{% endif %}
<meta property="og:image" content="https://res.cloudinary.com/nho/image/upload/w_1200,h_630,c_pad,g_south,b_rgb:{{ colors.darkMuted | bgcolor }},q_auto,f_auto/{{ site.opengraph.title.left.before }}:{{ title | clean4cloudinary }}/{{ site.opengraph.title.left.after }}/{% if geo.city and geo.country %}w_480,c_fit,co_rgb:{{ colors.darkMuted | fgcolor }},l_text:Roboto%20Condensed_30:Shot in {{ geo.city }}%252C {{ geo.country }}/{{ site.opengraph.subtitle.left.after }}/{% endif %}l_fetch:{{ photoUrl | base64 }},w_600,h_408,c_fit,bo_1px_solid_black,bo_2px_solid_white/fl_layer_apply,g_north_east,y_48,{{ position }}/resources/nho-photo-opengraph-banner" />
{% endblock %}

{% block content %}
  {% from "macros/css.njk" import css %}
  {{ css('components/photo', build.env) }}

  {% set breadcrumb = collections.photo_galleries | breadcrumb(page.url) %}

  {% include 'components/json-ld/breadcrumb.njk' %}

  <div class="photo{% if dimensions.width < dimensions.height %} portrait{% endif %}" style="--ratio: {{ dimensions.width / dimensions.height }}; --ambiant-foreground: #{{ colors.darkMuted | fgcolor }}">
    <div class="header">
      {% include 'components/breadcrumb.njk' %}
      <h1>{{ title }}</h1>
    </div>

    <img
      src="/photos/{{ page.fileSlug }}/{{ page.fileSlug }}.jpg"
      class="image"
      alt="{{ title }}"
      width="{{ dimensions.width }}"
      height="{{ dimensions.height }}"
      style="background-color: #{{ colors.muted | bgcolor }}"
      {% if dimensions.width < dimensions.height %}
        data-responsiver="portrait"
      {% else %}
        data-responsiver="landscape"
      {% endif %}
      importance="high"
    />

    <div class="description">
      {{ content | markdownify | safe }}
    </div>

    <div class="meta">
      <ul class="exif">
        <li class="date"><svg class="icon" aria-hidden="true"><use xlink:href="#date-icon" /></svg> <time class="dt-published" datetime="{{ dates.iso }}">{{ dates.human }}</time></li>
        <li class="gear">{% icon 'camera' %} {{ gear.make }} {{ gear.model }}</li>
        {% if settings.focal_length or gear.lens %}
          <li class="lens">{% icon 'focal_length' %}
            {% if gear.lens %}{{ gear.lens }}<br />{% endif %}
            {{ settings.focal_length }} mm
            {% if settings.focal_length_35mm %} (eq {{ settings.focal_length_35mm }} mm){% endif %}
          </li>
        {% endif %}
        {% if settings.iso %}<li class="iso">{% icon 'iso' %} ISO {{ settings.iso }}</li>{% endif %}
        {% if settings.aperture %}<li class="aperture">{% icon 'aperture' %} ƒ/{{ settings.aperture }}</span></li>{% endif %}
        {% if settings.shutter_speed %}<li class="shutter_speed">{% icon 'shutter_speed' %} {{ settings.shutter_speed }} s</li>{% endif %}
      </ul>
      <div class="geo">
        {% if geo.latitude and geo.longitude %}

          {% from "macros/css.njk" import css %}
          {{ css('components/photo-map', build.env) }}

          <div id="map">
            {% if geo.map %}
              <img src="/photos/{{ page.fileSlug }}/map.png" width="300" height="200" alt="Map showing location of “{{ title }}”{% if geo.city and geo.country %} in {{ geo.city }}, {{ geo.country }}{% endif %}" data-responsiver="photo_map" />
            {% else %}
              <img src="https://api.mapbox.com/styles/v1/{{ map.mapbox.style }}/static/{{ geo.longitude }},{{ geo.latitude }},10/450x300?access_token={{ env.MAPBOX_ACCESS_TOKEN }}" crossorigin="anonymous" width="300" height="200" alt="Map showing location of “{{ title }}”{% if geo.city and geo.country %} in {{ geo.city }}, {{ geo.country }}{% endif %}" data-responsiver="false" />
            {% endif %}
            <div class="marker-shadow"></div>
            <div class="marker"></div>
          </div>
          {% if geo.city and geo.country %}<p>{{ geo.city }}, {{ geo.country }}</p>{% endif %}
          <p class="locate"><svg class="icon" aria-hidden="true"><use xlink:href="#map-icon" /></svg> Locate it on the <a href="/map/#13/{{ geo.latitude }}/{{ geo.longitude }}">interactive global map</a></p>
        {% endif %}
      </div>
    </div>
    {% if tags %}
    <p class="tags">
      {% icon 'tag' %}
      {%- for tag in tags -%}
        <a href="/tags/{{ tag | slugify }}/" rel="tag" class="p-category">{{ tag }}</a>
      {%- endfor -%}
    </p>
    {% endif %}
  </div>
{% endblock %}
